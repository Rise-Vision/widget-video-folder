function onYouTubeIframeAPIReady(){"use strict";$.fn.anythingSliderVideo.youTubeReady=!0}!function(e){"use strict";e.fn.anythingSliderVideo=function(i){var t={videoId:"asvideo",wmode:"opaque",youtubeAutoLoad:!0,youtubeParams:{modestbranding:1,iv_load_policy:3,fs:1}};return this.each(function(){var n,a,o,s,d=e(this).data("AnythingSlider");if(d){"undefined"==typeof d.video?(n=d.video={},n.options=e.extend({},t,i),n.hasSwfo="undefined"!=typeof swfobject&&swfobject.hasOwnProperty("embedSWF")&&"function"==typeof swfobject.embedSWF&&swfobject.hasFlashPlayerVersion("1"),n.list={},n.hasVid=!1,n.hasEmbed=!1,n.services=e.fn.anythingSliderVideo.services,n.hasEmbedCount=0,n.hasiframeCount=0,n.$items=d.$items.filter(":not(.cloned)")):(n=d.video,n.$items=d.$items.filter(":not(.cloned)"));for(o in n.services)"string"==typeof o&&(s=n.services[o].selector,n.$items.find(s).each(function(){a=e(this);var i=a.closest(".panel");1!=i.data("AnythingSliderVideoInitialized")&&(a.attr("id",n.options.videoId+e.fn.anythingSliderVideo.videoIndex),n.list[e.fn.anythingSliderVideo.videoIndex]={id:n.options.videoId+e.fn.anythingSliderVideo.videoIndex++,panel:i[0],service:o,selector:s,status:-1,isInitialized:!1},i.data("AnythingSliderVideoInitialized",!0),n.hasVid=!0,s.match("embed|object")?(n.hasEmbed=!0,n.hasEmbedCount++):s.match("iframe")&&n.hasiframeCount++)}));e.each(n.list,function(i,t){var a,o,s,r,l=e(t.panel).find(t.selector),u=n.services[t.service],c=u.api&&u.api.initParam||"",p=u.api&&u.api.playerId||"";n.hasEmbed&&n.hasSwfo&&t.selector.match("embed|object")&&!t.isInitialized?l.each(function(){a=e(this),o="OBJECT"===e(this).parent()[0].tagName?e(this).parent():e(this),s="EMBED"===o[0].tagName?o.attr("src"):o.find("embed").attr("src")||o.children().filter("[name=movie]").attr("value"),r=e.extend(!0,{},{flashvars:null,params:{allowScriptAccess:"always",wmode:n.options.wmode||d.options.addWmodeToObject,allowfullscreen:!0},attr:{"class":o.attr("class"),style:o.attr("style"),"data-url":s}},u.embedOpts),o.wrap('<div id="'+t.id+'"></div>'),swfobject.embedSWF(s+c+(p?p+t.id:""),t.id,o.attr("width"),o.attr("height"),"10",null,r.flashvars,r.params,r.attr,function(){u.hasOwnProperty("init")&&u.init(d,a,i),i>=n.hasEmbedCount&&d.$el.trigger("swf_completed",d)})}):t.selector.match("iframe")&&!t.isInitialized&&l.each(function(){var t=e(this);u.hasOwnProperty("init")&&u.init(d,t,i)}),t.isInitialized=!0}),n.gup=function(e,i){e=e.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]");var t=new RegExp("[\\?&]"+e+"=([^&#]*)").exec(i||window.location.href);return null===t?"":t[1]},n.postMsg=function(i,t){var n=e("#"+t);n.length&&n[0].contentWindow.postMessage(i,n.attr("src").split("?")[0])},n.message=function(i){if(i.data){if(/infoDelivery/g.test(i.data))return;var t=e.parseJSON(i.data);e.each(n.list,function(e){n.services[n.list[e].service].hasOwnProperty("message")&&n.services[n.list[e].service].message(d,t)})}},n.control=function(i){var t,a=n.list,o="pause"===i?d.$lastPage[0]:d.$currentPage[0],s=!1;for(t=0;t<e.fn.anythingSliderVideo.videoIndex;t++)a[t]&&a[t].panel===o&&n.services[a[t].service].hasOwnProperty(i)&&(s=n.services[a[t].service][i](d,e("#"+a[t].id),t));return s},n.bindFrames=function(e){window.addEventListener?window.addEventListener(e,n.message,!1):window.attachEvent(/^on/.test(e)?e:"on"+e,n.message,!1)},n.hasiframeCount&&n.bindFrames("message"),d.$el.bind("slide_init",function(){n.control("pause")}).bind("slide_complete",function(){n.control("cont")}),n.isVideoPlayingOrig=d.options.isVideoPlaying,d.options.isVideoPlaying=function(){return n.control("isPlaying")||n.isVideoPlayingOrig&&n.isVideoPlayingOrig()},"function"==typeof n.options.onVideoInitialized&&n.options.onVideoInitialized(d)}})},e.fn.anythingSliderVideo.videoIndex=0,e.fn.anythingSliderVideo.services={video:{selector:"video",cont:function(e,i){e.options.resumeOnVisible&&i.length&&i[0].paused&&i[0].currentTime>0&&!i[0].ended&&i[0].play()},pause:function(){e("video").each(function(){"undefined"!=typeof this.pause&&this.pause()})},isPlaying:function(e,i){return!i.length||"undefined"==typeof i[0].pause||i[0].paused||i[0].ended?!1:!0}},vimeo1:{selector:"iframe[src*=vimeo]",init:function(e,i){var t=i.attr("src");i.attr("src",function(n,a){return a+(t.match(/\?/g)?"":"?")+"&wmode="+(e.video.options.wmode||e.options.addWmodeToObject)+"&api=1&player_id="+i[0].id})},cont:function(e,i,t){e.options.resumeOnVisible&&"pause"===e.video.list[t].status&&e.video.postMsg('{"method":"play"}',i[0].id)},pause:function(i){e("iframe[src*=vimeo]").each(function(){i.video.postMsg('{"method":"pause"}',this.id)})},message:function(e,i){var t,n=i.player_id||"";""!==n&&(t=n.replace(e.video.options.videoId,""),"ready"===i.event&&(e.video.postMsg('{"method":"addEventListener","value":"play"}',n),e.video.postMsg('{"method":"addEventListener","value":"pause"}',n),e.video.postMsg('{"method":"addEventListener","value":"finish"}',n)),e.video.list[t]&&(e.video.list[t].status=i.event))},isPlaying:function(e,i,t){return"play"===e.video.list[t].status?!0:!1}},vimeo2:{selector:"object[data-url*=vimeo], embed[src*=vimeo]",embedOpts:{flashvars:{api:1}},cont:function(e,i){e.options.resumeOnVisible&&"function"==typeof i[0].api_play&&i[0].api_paused()&&0!==i[0].api_getCurrentTime()&&i[0].api_getDuration()-i[0].api_getCurrentTime()>2&&i[0].api_play()},pause:function(){e("object[data-url*=vimeo], embed[src*=vimeo]").each(function(){var i="EMBED"===this.tagName?e(this).parent()[0]:this;"function"==typeof i.api_pause&&i.api_pause()})},isPlaying:function(e,i){return"function"!=typeof i[0].api_paused||i[0].api_paused()?!1:!0}},youtube1:{selector:"iframe[src*=youtube]",init:function(i,t,n){!e.fn.anythingSliderVideo.youTubeLoaded&&i.video.options.youtubeAutoLoad&&e.getScript("http://www.youtube.com/iframe_api",function(){e.fn.anythingSliderVideo.youTubeLoaded=!0});var a=0,o=setInterval(function(){if(e.fn.anythingSliderVideo.youTubeReady){var s=t[0].id,d=t.attr("src").split("embed/")[1],r=i.video.options.youtubeParams;r.wmode=i.video.options.wmode||i.options.addWmodeToObject||"opaque",t.wrap('<div id="'+s+'"/>').attr("id",""),i.video.list[n].player=new YT.Player(s,{height:"100%",width:"100%",videoId:d,playerVars:r,events:{onReady:function(e){i.video.list[n].status=e.data},onStateChange:function(e){i.video.list[n].status=e.data}}}),clearInterval(o)}++a>60&&clearInterval(o)},1e3)},cont:function(e,i,t){e.options.resumeOnVisible&&2===e.video.list[t].status&&e.video.list[t].player&&e.video.list[t].player.playVideo()},pause:function(e,i,t){e.video.list[t].player&&e.video.list[t].player.pauseVideo()},isPlaying:function(e,i,t){var n=e.video.list[t].status;return 1===n||n>2?!0:!1}},youtube2:{selector:"object[data-url*=youtube], embed[src*=youtube]",api:{initParam:"&enablejsapi=1",playerId:"&iv_load_policy=3&version=3&playerapiid="},cont:function(e,i){e.options.resumeOnVisible&&i.length&&"function"==typeof i[0].getPlayerState&&i[0].getPlayerState()>0&&i[0].playVideo()},pause:function(){e("object[data-url*=youtube], embed[src*=youtube]").each(function(){var i="EMBED"===this.tagName?e(this).parent()[0]:this;"function"==typeof i.getPlayerState&&i.getPlayerState()>0&&i.pauseVideo()})},isPlaying:function(e,i){return"function"==typeof i[0].getPlayerState&&(1===i[0].getPlayerState()||i[0].getPlayerState()>2)?!0:!1}}}}(jQuery);
//# sourceMappingURL=data:application/json;base64,