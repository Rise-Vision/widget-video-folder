if("undefined"==typeof config){var config={SKIN:""};"undefined"!=typeof angular&&(angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","components/rv-common-i18n/dist/locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.common.storage-selector.config").value("STORAGE_MODAL","https://storage-stage-rva-test.risevision.com/files/"))}var RiseVision=RiseVision||{};RiseVision.VideoFolder={},RiseVision.VideoFolder=function(e){"use strict";function t(){e.rpc.call("","rsevent_done",null,y.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,y.getString("id"),!0,!0,!0,!0,!0)}function o(e){V.remove(e,function(){V.add(e),V.hide(e),V.createFramePlayer(e,g,f)})}function i(e){f=e,V=new RiseVision.VideoFolder.FrameController,V.add(0),p=0,R=1,V.createFramePlayer(0,g,f)}function r(e){var t,n=V.getFrameObject(p),i=0===p?1:0;f=e,n&&(g.video.controls||(t=n.getPlaybackData(),t.total===t.index+1?t.duration-t.position>=15&&o(i):o(i)))}function a(){var e=V.getFrameObject(p);e&&e.pause()}function s(){var e=V.getFrameObject(p);F?t():e?e.play():(p=0===p?1:0,e=V.getFrameObject(p),e.play(),V.add(0===p?1:0),V.hide(0===p?1:0),V.createFramePlayer(0===p?1:0,g,f))}function c(t,n){Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(n)&&n.length>0&&(g=JSON.parse(n[0]),y=new e.Prefs,document.getElementById("videoContainer").style.height=y.getInt("rsH")+"px",g.width=y.getInt("rsW"),g.height=y.getInt("rsH"),v=new RiseVision.VideoFolder.Storage(g),v.init())}function d(){F?(V.remove(p),V.remove(0===p?1:0),t()):(V.show(0===p?1:0),V.remove(p,function(){t()}))}function l(){h||(2===R?(h=!0,n()):(V.add(1),V.hide(1),R=2,V.createFramePlayer(1,g,f)))}function u(e){console.debug("video-folder::playerError()",e),h?"setup"===e.type||0===e.index?F=!0:d():V.remove(p)}function m(){a()}var g,f,p,y=null,v=null,V=null,h=!1,F=!1,R=0;return{onStorageInit:i,onStorageRefresh:r,pause:a,play:s,setAdditionalParams:c,playerEnded:d,playerReady:l,playerError:u,stop:m}}(gadgets);var RiseVision=RiseVision||{};RiseVision.VideoFolder=RiseVision.VideoFolder||{},RiseVision.VideoFolder.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoFolderStorage");t&&(t.addEventListener("rise-storage-response",function(e){var t=[];e.detail&&e.detail.files&&e.detail.files.length>0&&(e.detail.files.forEach(function(e){t.push(e.url)}),n?(n=!1,RiseVision.VideoFolder.onStorageInit(t)):RiseVision.VideoFolder.onStorageRefresh(t))}),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("folder",e.storage.folder),t.go())}var n=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.VideoFolder=RiseVision.VideoFolder||{},RiseVision.VideoFolder.FrameController=function(){"use strict";function e(e){var t,n,o=document.getElementById(s+e);try{t=o.querySelector("iframe"),n=t.contentWindow?t.contentWindow:t.contentDocument.document?t.contentDocument.document:t.contentDocument,n.remove(),t.setAttribute("src","about:blank")}catch(i){console.debug(i)}}function t(e){var t,n;t=document.getElementById(s+e),n=document.createElement("iframe"),n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),t.appendChild(n)}function n(e,t,n){var o,i=document.getElementById(s+e);o=i.querySelector("iframe"),o&&(o.onload=function(){o.onload=null;var e=o.contentWindow?o.contentWindow:o.contentDocument.document?o.contentDocument.document:o.contentDocument;e.init(t,n,config.SKIN)},o.setAttribute("src","player.html"))}function o(e){var t,n=document.getElementById(s+e);return t=n.querySelector("iframe"),t?t.contentWindow?t.contentWindow:t.contentDocument.document?t.contentDocument.document:t.contentDocument:null}function i(e){document.getElementById(s+e).style.visibility="hidden"}function r(t,n){var o=document.getElementById(s+t);e(t),setTimeout(function(){for(;o.firstChild;)o.removeChild(o.firstChild);n&&"function"==typeof n&&n()},200)}function a(e){document.getElementById(s+e).style.visibility="visible"}var s="if_";return{add:t,createFramePlayer:n,getFrameObject:o,hide:i,remove:r,show:a}},function(e,t){"use strict";function n(){RiseVision.VideoFolder.play()}function o(){RiseVision.VideoFolder.pause()}function i(){RiseVision.VideoFolder.stop()}function r(){e.removeEventListener("polymer-ready",r),s&&""!==s&&(t.rpc.register("rscmd_play_"+s,n),t.rpc.register("rscmd_pause_"+s,o),t.rpc.register("rscmd_stop_"+s,i),t.rpc.register("rsparam_set_"+s,RiseVision.VideoFolder.setAdditionalParams),t.rpc.call("","rsparam_get",null,s,["additionalParams"]))}var a=new t.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("polymer-ready",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-4"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,