if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.VideoFolder={},RiseVision.VideoFolder=function(e){"use strict";function n(){clearTimeout(F),F=null}function i(){e.rpc.call("","rsevent_done",null,v.getString("id"))}function t(){e.rpc.call("","rsevent_ready",null,v.getString("id"),!0,!0,!0,!0,!0)}function o(){n(),F=setTimeout(function(){i()},5e3)}function r(e){b=!0,_=[],"empty"===e?y.show("The selected folder does not contain any videos."):"noexist"===e&&y.show("The selected folder does not exist."),h.remove(w,function(){C||o()})}function s(e){_=e,y.hide(),C||l()}function a(e){_=e,R=!1}function d(){var e=h.getFrameObject(w);return C=!0,b?(n(),void 0):(e&&e.pause(),void 0)}function l(){var e=h.getFrameObject(w);return C=!1,b?(o(),void 0):(R?i():e?e.play():_&&_.length>0&&(h.add(0),h.createFramePlayer(0,p,_,config.SKIN,"player.html")),void 0)}function c(n,i){Array.isArray(n)&&n.length>0&&"additionalParams"===n[0]&&Array.isArray(i)&&i.length>0&&(p=JSON.parse(i[0]),v=new e.Prefs,document.getElementById("videoContainer").style.height=v.getInt("rsH")+"px",p.width=v.getInt("rsW"),p.height=v.getInt("rsH"),y=new RiseVision.Common.Message(document.getElementById("videoContainer"),document.getElementById("messageContainer")),y.show("Please wait while your video is downloaded."),h=new RiseVision.Common.Video.FrameController,V=new RiseVision.VideoFolder.Storage(p),V.init(),t())}function u(){h.remove(w,function(){i()})}function m(){if(!C){var e=h.getFrameObject(w);e.play()}}function f(e){console.debug("video-folder::playerError()",e),("setup"===e.type||0===e.index)&&(R=!0),u()}function g(){d()}var p,v=null,y=null,V=null,h=null,R=!1,C=!0,F=null,b=!1,_=[],w=0;return{onStorageInit:s,onStorageRefresh:a,pause:d,play:l,setAdditionalParams:c,noFiles:r,playerEnded:u,playerReady:m,playerError:f,stop:g}}(gadgets);var RiseVision=RiseVision||{};RiseVision.VideoFolder=RiseVision.VideoFolder||{},RiseVision.VideoFolder.Storage=function(e){"use strict";function n(){return _.pluck(c,"url")}function i(e){return _.find(c,function(n){return e.name===n.name})}function t(e){var n=i(e);n&&c.splice(c.indexOf(n),1)}function o(e){var n=i(e);n&&(n.url=e.url)}function r(e){var n=i(e);n||(e.fileName=e.name.slice(e.name.lastIndexOf("/")+1,e.name.lastIndexOf(".")).toLowerCase(),c.splice(_.sortedIndex(c,e,"fileName"),0,e))}function s(){RiseVision.VideoFolder.noFiles("empty")}function a(){RiseVision.VideoFolder.noFiles("noexist")}function d(){var i=document.getElementById("videoFolderStorage");i&&(i.addEventListener("rise-storage-empty-folder",s),i.addEventListener("rise-storage-no-folder",a),i.addEventListener("rise-storage-response",function(e){var i=e.detail;return i.added&&(r(i),l)?(l=!1,RiseVision.VideoFolder.onStorageInit(n()),void 0):(i.changed&&o(i),i.deleted&&t(i),RiseVision.VideoFolder.onStorageRefresh(n()),void 0)}),i.setAttribute("companyId",e.storage.companyId),i.setAttribute("folder",e.storage.folder),i.setAttribute("env",config.STORAGE_ENV),i.go())}var l=!0,c=[];return{init:d}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(d+e)}function n(n){var i,t=e(n);return i=t.querySelector("iframe"),i?i.contentWindow?i.contentWindow:i.contentDocument.document?i.contentDocument.document:i.contentDocument:null}function i(i){var t,o=e(i),r=n(i);r&&(t=o.querySelector("iframe"),r.remove(),t.setAttribute("src","about:blank"))}function t(n){var i=e(n),t=document.createElement("iframe");t.setAttribute("allowTransparency",!0),t.setAttribute("frameborder","0"),t.setAttribute("scrolling","no"),i.appendChild(t)}function o(i,t,o,r,s){var a,d=e(i),l=n(i);l&&(a=d.querySelector("iframe"),a.onload=function(){a.onload=null,l.init(t,o,r),l.load()},a.setAttribute("src",s))}function r(n){var i=e(n);i.style.visibility="hidden"}function s(e,n){var t=document.getElementById(d+e);i(e),setTimeout(function(){for(;t.firstChild;)t.removeChild(t.firstChild);n&&"function"==typeof n&&n()},200)}function a(n){var i=e(n);i.style.visibility="visible"}var d="if_";return{add:t,createFramePlayer:o,getFrameContainer:e,getFrameObject:n,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,n){"use strict";function i(){try{n.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function t(){if(r){for(;n.firstChild;)n.removeChild(n.firstChild);n.style.display="none",e.style.visibility="visible",r=!1}}function o(i){var t,o=document.createDocumentFragment();r?(t=n.querySelector(".message"),t.innerHTML=i):(e.style.visibility="hidden",n.style.display="block",t=document.createElement("p"),t.innerHTML=i,t.setAttribute("class","message"),t.style.lineHeight=n.style.height,o.appendChild(t),n.appendChild(o),r=!0)}var r=!1;return i(),{hide:t,show:o}},function(e,n){"use strict";function i(){RiseVision.VideoFolder.play()}function t(){RiseVision.VideoFolder.pause()}function o(){RiseVision.VideoFolder.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(n.rpc.register("rscmd_play_"+a,i),n.rpc.register("rscmd_pause_"+a,t),n.rpc.register("rscmd_stop_"+a,o),n.rpc.register("rsparam_set_"+a,RiseVision.VideoFolder.setAdditionalParams),n.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new n.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-4"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiY29uZmlnIiwiU0tJTiIsIlNUT1JBR0VfRU5WIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnN0YW50IiwiUmlzZVZpc2lvbiIsIlZpZGVvRm9sZGVyIiwiZ2FkZ2V0cyIsIl9jbGVhck5vRmlsZXNUaW1lciIsImNsZWFyVGltZW91dCIsIl9ub0ZpbGVzVGltZXIiLCJfZG9uZSIsInJwYyIsImNhbGwiLCJfcHJlZnMiLCJnZXRTdHJpbmciLCJfcmVhZHkiLCJfc3RhcnROb0ZpbGVzVGltZXIiLCJzZXRUaW1lb3V0Iiwibm9GaWxlcyIsInR5cGUiLCJfbm9GaWxlc0ZsYWciLCJfY3VycmVudEZpbGVzIiwiX21lc3NhZ2UiLCJzaG93IiwiX2ZyYW1lQ29udHJvbGxlciIsInJlbW92ZSIsIl9jdXJyZW50RnJhbWUiLCJfdmlld2VyUGF1c2VkIiwib25TdG9yYWdlSW5pdCIsInVybHMiLCJoaWRlIiwicGxheSIsIm9uU3RvcmFnZVJlZnJlc2giLCJfcGxheWJhY2tFcnJvciIsInBhdXNlIiwiZnJhbWVPYmoiLCJnZXRGcmFtZU9iamVjdCIsImxlbmd0aCIsImFkZCIsImNyZWF0ZUZyYW1lUGxheWVyIiwiX2FkZGl0aW9uYWxQYXJhbXMiLCJzZXRBZGRpdGlvbmFsUGFyYW1zIiwibmFtZXMiLCJ2YWx1ZXMiLCJBcnJheSIsImlzQXJyYXkiLCJKU09OIiwicGFyc2UiLCJQcmVmcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImhlaWdodCIsImdldEludCIsIndpZHRoIiwiQ29tbW9uIiwiTWVzc2FnZSIsIlZpZGVvIiwiRnJhbWVDb250cm9sbGVyIiwiX3N0b3JhZ2UiLCJTdG9yYWdlIiwiaW5pdCIsInBsYXllckVuZGVkIiwicGxheWVyUmVhZHkiLCJwbGF5ZXJFcnJvciIsImVycm9yIiwiY29uc29sZSIsImRlYnVnIiwiaW5kZXgiLCJzdG9wIiwiZGF0YSIsIl9nZXRVcmxzIiwiXyIsInBsdWNrIiwiX2ZpbGVzIiwiX2dldEV4aXN0aW5nRmlsZSIsImZpbGUiLCJmaW5kIiwiZiIsIm5hbWUiLCJfZGVsZXRlRmlsZSIsImV4aXN0aW5nIiwic3BsaWNlIiwiaW5kZXhPZiIsIl9jaGFuZ2VGaWxlIiwidXJsIiwiX2FkZEZpbGUiLCJmaWxlTmFtZSIsInNsaWNlIiwibGFzdEluZGV4T2YiLCJ0b0xvd2VyQ2FzZSIsInNvcnRlZEluZGV4IiwiX2hhbmRsZUVtcHR5Rm9sZGVyIiwiX2hhbmRsZU5vRm9sZGVyIiwic3RvcmFnZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiZGV0YWlsIiwiYWRkZWQiLCJfaW5pdGlhbExvYWQiLCJjaGFuZ2VkIiwiZGVsZXRlZCIsInNldEF0dHJpYnV0ZSIsImNvbXBhbnlJZCIsImZvbGRlciIsImdvIiwiZ2V0RnJhbWVDb250YWluZXIiLCJQUkVGSVgiLCJpZnJhbWUiLCJmcmFtZUNvbnRhaW5lciIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50V2luZG93IiwiY29udGVudERvY3VtZW50IiwiX2NsZWFyIiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwicGFyYW1zIiwiZmlsZXMiLCJza2luIiwic3JjIiwib25sb2FkIiwibG9hZCIsInZpc2liaWxpdHkiLCJjYWxsYmFjayIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsIm1haW5Db250YWluZXIiLCJtZXNzYWdlQ29udGFpbmVyIiwiX2luaXQiLCJ3YXJuIiwibWVzc2FnZSIsIl9hY3RpdmUiLCJkaXNwbGF5IiwicCIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImlubmVySFRNTCIsImxpbmVIZWlnaHQiLCJ3aW5kb3ciLCJwb2x5bWVyUmVhZHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaWQiLCJyZWdpc3RlciIsInByZWZzIiwib25jb250ZXh0bWVudSIsIl9nYXEiLCJwdXNoIiwiZ2EiLCJhc3luYyIsImxvY2F0aW9uIiwicHJvdG9jb2wiLCJzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIl0sIm1hcHBpbmdzIjoiQUFFQSxHQUFzQixtQkFBWEEsUUFBd0IsQ0FDakMsR0FBSUEsU0FDRkMsS0FBTSxrQkFDTkMsWUFBYSxPQUdRLG9CQUFaQyxVQUNUQSxRQUFRQyxPQUFPLG9DQUNaQyxTQUFTLGlCQUFrQix3QkFDM0JBLFNBQVMsZ0JBQWlCLFNBTWpDLEdBQUlDLFlBQWFBLGNBQ2pCQSxZQUFXQyxlQUVYRCxXQUFXQyxZQUFjLFNBQVdDLEdBQ2xDLFlBcUJBLFNBQVNDLEtBQ1BDLGFBQWFDLEdBQ2JBLEVBQWdCLEtBR2xCLFFBQVNDLEtBQ1BKLEVBQVFLLElBQUlDLEtBQUssR0FBSSxlQUFnQixLQUFNQyxFQUFPQyxVQUFVLE9BRzlELFFBQVNDLEtBQ1BULEVBQVFLLElBQUlDLEtBQUssR0FBSSxnQkFBaUIsS0FBTUMsRUFBT0MsVUFBVSxPQUMzRCxHQUFNLEdBQU0sR0FBTSxHQUFNLEdBRzVCLFFBQVNFLEtBQ1BULElBRUFFLEVBQWdCUSxXQUFXLFdBRXpCUCxLQUNDLEtBTUwsUUFBU1EsR0FBUUMsR0FDZkMsR0FBZSxFQUNmQyxLQUVhLFVBQVRGLEVBQ0ZHLEVBQVNDLEtBQUssb0RBQ0ksWUFBVEosR0FDVEcsRUFBU0MsS0FBSyx1Q0FHaEJDLEVBQWlCQyxPQUFPQyxFQUFlLFdBRWhDQyxHQUNIWCxNQU1OLFFBQVNZLEdBQWNDLEdBQ3JCUixFQUFnQlEsRUFFaEJQLEVBQVNRLE9BRUpILEdBQ0hJLElBSUosUUFBU0MsR0FBaUJILEdBQ3hCUixFQUFnQlEsRUFJaEJJLEdBQWlCLEVBR25CLFFBQVNDLEtBQ1AsR0FBSUMsR0FBV1gsRUFBaUJZLGVBQWVWLEVBSS9DLE9BRkFDLElBQWdCLEVBRVpQLEdBQ0ZiLElBQ0EsU0FHRTRCLEdBQ0ZBLEVBQVNELFFBRFgsUUFLRixRQUFTSCxLQUNQLEdBQUlJLEdBQVdYLEVBQWlCWSxlQUFlVixFQUkvQyxPQUZBQyxJQUFnQixFQUVaUCxHQUNGSixJQUNBLFNBR0dpQixFQWdCSHZCLElBZkl5QixFQUNGQSxFQUFTSixPQUlMVixHQUFpQkEsRUFBY2dCLE9BQVMsSUFHMUNiLEVBQWlCYyxJQUFJLEdBQ3JCZCxFQUFpQmUsa0JBQWtCLEVBQUdDLEVBQW1CbkIsRUFBZXZCLE9BQU9DLEtBQU0sZ0JBVjNGLFFBcUJGLFFBQVMwQyxHQUFvQkMsRUFBT0MsR0FDOUJDLE1BQU1DLFFBQVFILElBQVVBLEVBQU1MLE9BQVMsR0FBa0IscUJBQWJLLEVBQU0sSUFDaERFLE1BQU1DLFFBQVFGLElBQVdBLEVBQU9OLE9BQVMsSUFDM0NHLEVBQW9CTSxLQUFLQyxNQUFNSixFQUFPLElBQ3RDOUIsRUFBUyxHQUFJUCxHQUFRMEMsTUFFckJDLFNBQVNDLGVBQWUsa0JBQWtCQyxNQUFNQyxPQUFTdkMsRUFBT3dDLE9BQU8sT0FBUyxLQUVoRmIsRUFBa0JjLE1BQVF6QyxFQUFPd0MsT0FBTyxPQUN4Q2IsRUFBa0JZLE9BQVN2QyxFQUFPd0MsT0FBTyxPQUV6Qy9CLEVBQVcsR0FBSWxCLFlBQVdtRCxPQUFPQyxRQUFRUCxTQUFTQyxlQUFlLGtCQUMvREQsU0FBU0MsZUFBZSxxQkFHMUI1QixFQUFTQyxLQUFLLCtDQUdkQyxFQUFtQixHQUFJcEIsWUFBV21ELE9BQU9FLE1BQU1DLGdCQUcvQ0MsRUFBVyxHQUFJdkQsWUFBV0MsWUFBWXVELFFBQVFwQixHQUM5Q21CLEVBQVNFLE9BRVQ5QyxLQUtOLFFBQVMrQyxLQUNQdEMsRUFBaUJDLE9BQU9DLEVBQWUsV0FDckNoQixNQUlKLFFBQVNxRCxLQUNQLElBQUtwQyxFQUFlLENBQ2xCLEdBQUlRLEdBQVdYLEVBQWlCWSxlQUFlVixFQUMvQ1MsR0FBU0osUUFJYixRQUFTaUMsR0FBWUMsR0FDbkJDLFFBQVFDLE1BQU0sOEJBQStCRixJQUUxQixVQUFmQSxFQUFNOUMsTUFBb0MsSUFBaEI4QyxFQUFNRyxTQUVsQ25DLEdBQWlCLEdBSW5CNkIsSUFHRixRQUFTTyxLQUNQbkMsSUF2TEYsR0FBSU0sR0FFQTNCLEVBQVMsS0FDWFMsRUFBVyxLQUNYcUMsRUFBVyxLQUNYbkMsRUFBbUIsS0FFakJTLEdBQWlCLEVBQ25CTixHQUFnQixFQUVkbEIsRUFBZ0IsS0FDbEJXLEdBQWUsRUFFYkMsS0FDRkssRUFBZ0IsQ0E0S2xCLFFBQ0VFLGNBQWlCQSxFQUNqQkksaUJBQW9CQSxFQUNwQkUsTUFBU0EsRUFDVEgsS0FBUUEsRUFDUlUsb0JBQXVCQSxFQUN2QnZCLFFBQVdBLEVBQ1g0QyxZQUFlQSxFQUNmQyxZQUFlQSxFQUNmQyxZQUFlQSxFQUNmSyxLQUFRQSxJQUdUL0QsUUFJSCxJQUFJRixZQUFhQSxjQUNqQkEsWUFBV0MsWUFBY0QsV0FBV0MsZ0JBRXBDRCxXQUFXQyxZQUFZdUQsUUFBVSxTQUFVVSxHQUN6QyxZQU1BLFNBQVNDLEtBQ1AsTUFBT0MsR0FBRUMsTUFBTUMsRUFBUSxPQUd6QixRQUFTQyxHQUFpQkMsR0FDeEIsTUFBT0osR0FBRUssS0FBS0gsRUFBUSxTQUFVSSxHQUM5QixNQUFPRixHQUFLRyxPQUFTRCxFQUFFQyxPQUkzQixRQUFTQyxHQUFZSixHQUNuQixHQUFJSyxHQUFXTixFQUFpQkMsRUFFNUJLLElBQ0ZQLEVBQU9RLE9BQU9SLEVBQU9TLFFBQVFGLEdBQVcsR0FJNUMsUUFBU0csR0FBWVIsR0FDbkIsR0FBSUssR0FBV04sRUFBaUJDLEVBRTVCSyxLQUNGQSxFQUFTSSxJQUFNVCxFQUFLUyxLQUl4QixRQUFTQyxHQUFTVixHQUNoQixHQUFJSyxHQUFXTixFQUFpQkMsRUFFM0JLLEtBRUhMLEVBQUtXLFNBQVdYLEVBQUtHLEtBQUtTLE1BQU1aLEVBQUtHLEtBQUtVLFlBQVksS0FBTyxFQUFHYixFQUFLRyxLQUFLVSxZQUFZLE1BQU1DLGNBRzVGaEIsRUFBT1EsT0FBT1YsRUFBRW1CLFlBQVlqQixFQUFRRSxFQUFNLFlBQWEsRUFBR0EsSUFJOUQsUUFBU2dCLEtBQ1B4RixXQUFXQyxZQUFZYSxRQUFRLFNBR2pDLFFBQVMyRSxLQUNQekYsV0FBV0MsWUFBWWEsUUFBUSxXQU1qQyxRQUFTMkMsS0FDUCxHQUFJaUMsR0FBVTdDLFNBQVNDLGVBQWUscUJBRWpDNEMsS0FJTEEsRUFBUUMsaUJBQWlCLDRCQUE2QkgsR0FDdERFLEVBQVFDLGlCQUFpQix5QkFBMEJGLEdBQ25EQyxFQUFRQyxpQkFBaUIsd0JBQXlCLFNBQVNDLEdBQ3pELEdBQUlwQixHQUFPb0IsRUFBRUMsTUFHYixPQUFHckIsR0FBS3NCLFFBQ05aLEVBQVNWLEdBRUx1QixJQUNGQSxHQUFlLEVBQ2YvRixXQUFXQyxZQUFZdUIsY0FBYzJDLEtBRXJDLFNBS0RLLEVBQUt3QixTQUNOaEIsRUFBWVIsR0FJWEEsRUFBS3lCLFNBQ05yQixFQUFZSixHQUdkeEUsV0FBV0MsWUFBWTJCLGlCQUFpQnVDLEtBVHhDLFVBYUZ1QixFQUFRUSxhQUFhLFlBQWFoQyxFQUFLd0IsUUFBUVMsV0FDL0NULEVBQVFRLGFBQWEsU0FBVWhDLEVBQUt3QixRQUFRVSxRQUM1Q1YsRUFBUVEsYUFBYSxNQUFPeEcsT0FBT0UsYUFFbkM4RixFQUFRVyxNQS9GVixHQUFJTixJQUFlLEVBRWZ6QixJQWdHSixRQUNFYixLQUFRQSxHQUlaLElBQUl6RCxZQUFhQSxjQUNqQkEsWUFBV21ELE9BQVNuRCxXQUFXbUQsV0FFL0JuRCxXQUFXbUQsT0FBT0UsTUFBUXJELFdBQVdtRCxPQUFPRSxVQUU1Q3JELFdBQVdtRCxPQUFPRSxNQUFNQyxnQkFBa0IsV0FDeEMsWUFJQSxTQUFTZ0QsR0FBa0J0QyxHQUN6QixNQUFPbkIsVUFBU0MsZUFBZXlELEVBQVN2QyxHQUcxQyxRQUFTaEMsR0FBZWdDLEdBQ3RCLEdBQ0V3QyxHQURFQyxFQUFpQkgsRUFBa0J0QyxFQUt2QyxPQUZBd0MsR0FBU0MsRUFBZUMsY0FBYyxVQUVsQ0YsRUFDTUEsRUFBb0IsY0FBSUEsRUFBT0csY0FDcENILEVBQU9JLGdCQUF3QixTQUFJSixFQUFPSSxnQkFBZ0IvRCxTQUFXMkQsRUFBT0ksZ0JBRzFFLEtBR1QsUUFBU0MsR0FBTzdDLEdBQ2QsR0FFRXdDLEdBRkVDLEVBQWlCSCxFQUFrQnRDLEdBQ3JDakMsRUFBV0MsRUFBZWdDLEVBR3hCakMsS0FDRnlFLEVBQVNDLEVBQWVDLGNBQWMsVUFDdEMzRSxFQUFTVixTQUNUbUYsRUFBT04sYUFBYSxNQUFPLGdCQUkvQixRQUFTaEUsR0FBSThCLEdBQ1gsR0FBSXlDLEdBQWlCSCxFQUFrQnRDLEdBQ3JDd0MsRUFBUzNELFNBQVNpRSxjQUFjLFNBRWxDTixHQUFPTixhQUFhLHFCQUFxQixHQUN6Q00sRUFBT04sYUFBYSxjQUFlLEtBQ25DTSxFQUFPTixhQUFhLFlBQWEsTUFFakNPLEVBQWVNLFlBQVlQLEdBRzdCLFFBQVNyRSxHQUFrQjZCLEVBQU9nRCxFQUFRQyxFQUFPQyxFQUFNQyxHQUNyRCxHQUVFWCxHQUZFQyxFQUFpQkgsRUFBa0J0QyxHQUNyQ2pDLEVBQVdDLEVBQWVnQyxFQUd4QmpDLEtBQ0Z5RSxFQUFTQyxFQUFlQyxjQUFjLFVBRXRDRixFQUFPWSxPQUFTLFdBQ2RaLEVBQU9ZLE9BQVMsS0FHaEJyRixFQUFTMEIsS0FBS3VELEVBQVFDLEVBQU9DLEdBQzdCbkYsRUFBU3NGLFFBR1hiLEVBQU9OLGFBQWEsTUFBT2lCLElBSy9CLFFBQVN6RixHQUFLc0MsR0FDWixHQUFJeUMsR0FBaUJILEVBQWtCdEMsRUFFdkN5QyxHQUFlMUQsTUFBTXVFLFdBQWEsU0FHcEMsUUFBU2pHLEdBQU8yQyxFQUFPdUQsR0FDckIsR0FBSWQsR0FBaUI1RCxTQUFTQyxlQUFleUQsRUFBU3ZDLEVBRXRENkMsR0FBTzdDLEdBRVBuRCxXQUFXLFdBRVQsS0FBTzRGLEVBQWVlLFlBQ3BCZixFQUFlZ0IsWUFBWWhCLEVBQWVlLFdBR3hDRCxJQUFnQyxrQkFBYkEsSUFDckJBLEtBRUQsS0FHTCxRQUFTcEcsR0FBSzZDLEdBQ1osR0FBSXlDLEdBQWlCSCxFQUFrQnRDLEVBRXZDeUMsR0FBZTFELE1BQU11RSxXQUFhLFVBMUZwQyxHQUFJZixHQUFTLEtBNkZiLFFBQ0VyRSxJQUFLQSxFQUNMQyxrQkFBbUJBLEVBQ25CbUUsa0JBQW1CQSxFQUNuQnRFLGVBQWdCQSxFQUNoQk4sS0FBTUEsRUFDTkwsT0FBUUEsRUFDUkYsS0FBTUEsR0FJVixJQUFJbkIsWUFBYUEsY0FDakJBLFlBQVdtRCxPQUFTbkQsV0FBV21ELFdBRS9CbkQsV0FBV21ELE9BQU9DLFFBQVUsU0FBVXNFLEVBQWVDLEdBQ25ELFlBSUEsU0FBU0MsS0FDUCxJQUNFRCxFQUFpQjVFLE1BQU1DLE9BQVMwRSxFQUFjM0UsTUFBTUMsT0FDcEQsTUFBTzRDLEdBQ1A5QixRQUFRK0QsS0FBSyw4QkFBK0JqQyxFQUFFa0MsVUFPbEQsUUFBU3BHLEtBQ1AsR0FBSXFHLEVBQVMsQ0FFWCxLQUFPSixFQUFpQkgsWUFDdEJHLEVBQWlCRixZQUFZRSxFQUFpQkgsV0FJaERHLEdBQWlCNUUsTUFBTWlGLFFBQVUsT0FHakNOLEVBQWMzRSxNQUFNdUUsV0FBYSxVQUVqQ1MsR0FBVSxHQUlkLFFBQVM1RyxHQUFLMkcsR0FDWixHQUNFRyxHQURFQyxFQUFXckYsU0FBU3NGLHdCQUduQkosSUFrQkhFLEVBQUlOLEVBQWlCakIsY0FBYyxZQUNuQ3VCLEVBQUVHLFVBQVlOLElBakJkSixFQUFjM0UsTUFBTXVFLFdBQWEsU0FFakNLLEVBQWlCNUUsTUFBTWlGLFFBQVUsUUFHakNDLEVBQUlwRixTQUFTaUUsY0FBYyxLQUMzQm1CLEVBQUVHLFVBQVlOLEVBQ2RHLEVBQUUvQixhQUFhLFFBQVMsV0FDeEIrQixFQUFFbEYsTUFBTXNGLFdBQWFWLEVBQWlCNUUsTUFBTUMsT0FFNUNrRixFQUFTbkIsWUFBWWtCLEdBQ3JCTixFQUFpQlosWUFBWW1CLEdBRTdCSCxHQUFVLEdBakRkLEdBQUlBLElBQVUsQ0EyRGQsT0FGQUgsTUFHRWxHLEtBQVFBLEVBQ1JQLEtBQVFBLElBTVosU0FBV21ILEVBQVFwSSxHQUNqQixZQVVBLFNBQVN5QixLQUNQM0IsV0FBV0MsWUFBWTBCLE9BR3pCLFFBQVNHLEtBQ1A5QixXQUFXQyxZQUFZNkIsUUFHekIsUUFBU21DLEtBQ1BqRSxXQUFXQyxZQUFZZ0UsT0FHekIsUUFBU3NFLEtBQ1BELEVBQU9FLG9CQUFvQixxQkFBc0JELEdBRTdDRSxHQUFhLEtBQVBBLElBQ1J2SSxFQUFRSyxJQUFJbUksU0FBUyxjQUFnQkQsRUFBSTlHLEdBQ3pDekIsRUFBUUssSUFBSW1JLFNBQVMsZUFBaUJELEVBQUkzRyxHQUMxQzVCLEVBQVFLLElBQUltSSxTQUFTLGNBQWdCRCxFQUFJeEUsR0FFekMvRCxFQUFRSyxJQUFJbUksU0FBUyxlQUFpQkQsRUFBSXpJLFdBQVdDLFlBQVlvQyxxQkFDakVuQyxFQUFRSyxJQUFJQyxLQUFLLEdBQUksY0FBZSxLQUFNaUksR0FBSyxzQkE3Qm5ELEdBQUlFLEdBQVEsR0FBSXpJLEdBQVEwQyxNQUN0QjZGLEVBQUtFLEVBQU1qSSxVQUFVLEtBR3ZCNEgsR0FBT00sY0FBZ0IsV0FDckIsT0FBTyxHQTRCVE4sRUFBTzNDLGlCQUFpQixxQkFBc0I0QyxJQUU3Q0QsT0FBUXBJLFFBS1gsSUFBSTJJLE1BQU9BLFFBRVhBLE1BQUtDLE1BQU0sY0FBZSxrQkFDMUJELEtBQUtDLE1BQU0sbUJBRVgsV0FDRSxHQUFJQyxHQUFLbEcsU0FBU2lFLGNBQWMsU0FBV2lDLEdBQUdoSSxLQUFPLGtCQUFtQmdJLEVBQUdDLE9BQVEsRUFDbkZELEVBQUc1QixLQUFPLFVBQVl0RSxTQUFTb0csU0FBU0MsU0FBVyxjQUFnQixjQUFnQiw2QkFDbkYsSUFBSUMsR0FBSXRHLFNBQVN1RyxxQkFBcUIsVUFBVSxFQUFJRCxHQUFFRSxXQUFXQyxhQUFhUCxFQUFJSSIsImZpbGUiOiJqcy93aWRnZXQubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIGNvbmZpZzogdHJ1ZSAqL1xuLyogZXhwb3J0ZWQgY29uZmlnICovXG5pZiAodHlwZW9mIGNvbmZpZyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICB2YXIgY29uZmlnID0ge1xuICAgIFNLSU46IFwic2tpbi9SVlNraW4ueG1sXCIsXG4gICAgU1RPUkFHRV9FTlY6IFwicHJvZFwiXG4gIH07XG5cbiAgaWYgKHR5cGVvZiBhbmd1bGFyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgYW5ndWxhci5tb2R1bGUoXCJyaXNldmlzaW9uLmNvbW1vbi5pMThuLmNvbmZpZ1wiLCBbXSlcbiAgICAgIC5jb25zdGFudChcIkxPQ0FMRVNfUFJFRklYXCIsIFwibG9jYWxlcy90cmFuc2xhdGlvbl9cIilcbiAgICAgIC5jb25zdGFudChcIkxPQ0FMRVNfU1VGSVhcIiwgXCIuanNvblwiKTtcbiAgfVxufVxuXG4vKiBnbG9iYWwgZ2FkZ2V0cywgY29uZmlnICovXG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblJpc2VWaXNpb24uVmlkZW9Gb2xkZXIgPSB7fTtcblxuUmlzZVZpc2lvbi5WaWRlb0ZvbGRlciA9IChmdW5jdGlvbiAoZ2FkZ2V0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX2FkZGl0aW9uYWxQYXJhbXM7XG5cbiAgdmFyIF9wcmVmcyA9IG51bGwsXG4gICAgX21lc3NhZ2UgPSBudWxsLFxuICAgIF9zdG9yYWdlID0gbnVsbCxcbiAgICBfZnJhbWVDb250cm9sbGVyID0gbnVsbDtcblxuICB2YXIgX3BsYXliYWNrRXJyb3IgPSBmYWxzZSxcbiAgICBfdmlld2VyUGF1c2VkID0gdHJ1ZTtcblxuICB2YXIgX25vRmlsZXNUaW1lciA9IG51bGwsXG4gICAgX25vRmlsZXNGbGFnID0gZmFsc2U7XG5cbiAgdmFyIF9jdXJyZW50RmlsZXMgPSBbXSxcbiAgICBfY3VycmVudEZyYW1lID0gMDtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfY2xlYXJOb0ZpbGVzVGltZXIoKSB7XG4gICAgY2xlYXJUaW1lb3V0KF9ub0ZpbGVzVGltZXIpO1xuICAgIF9ub0ZpbGVzVGltZXIgPSBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gX2RvbmUoKSB7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzZXZlbnRfZG9uZVwiLCBudWxsLCBfcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIikpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3JlYWR5KCkge1xuICAgIGdhZGdldHMucnBjLmNhbGwoXCJcIiwgXCJyc2V2ZW50X3JlYWR5XCIsIG51bGwsIF9wcmVmcy5nZXRTdHJpbmcoXCJpZFwiKSxcbiAgICAgIHRydWUsIHRydWUsIHRydWUsIHRydWUsIHRydWUpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0YXJ0Tm9GaWxlc1RpbWVyKCkge1xuICAgIF9jbGVhck5vRmlsZXNUaW1lcigpO1xuXG4gICAgX25vRmlsZXNUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gbm90aWZ5IFZpZXdlciB3aWRnZXQgaXMgZG9uZVxuICAgICAgX2RvbmUoKTtcbiAgICB9LCA1MDAwKTtcbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gbm9GaWxlcyh0eXBlKSB7XG4gICAgX25vRmlsZXNGbGFnID0gdHJ1ZTtcbiAgICBfY3VycmVudEZpbGVzID0gW107XG5cbiAgICBpZiAodHlwZSA9PT0gXCJlbXB0eVwiKSB7XG4gICAgICBfbWVzc2FnZS5zaG93KFwiVGhlIHNlbGVjdGVkIGZvbGRlciBkb2VzIG5vdCBjb250YWluIGFueSB2aWRlb3MuXCIpO1xuICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJub2V4aXN0XCIpIHtcbiAgICAgIF9tZXNzYWdlLnNob3coXCJUaGUgc2VsZWN0ZWQgZm9sZGVyIGRvZXMgbm90IGV4aXN0LlwiKTtcbiAgICB9XG5cbiAgICBfZnJhbWVDb250cm9sbGVyLnJlbW92ZShfY3VycmVudEZyYW1lLCBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBpZiBXaWRnZXQgaXMgcGxheWluZyByaWdodCBub3csIHJ1biB0aGUgdGltZXJcbiAgICAgIGlmICghX3ZpZXdlclBhdXNlZCkge1xuICAgICAgICBfc3RhcnROb0ZpbGVzVGltZXIoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICB9XG5cbiAgZnVuY3Rpb24gb25TdG9yYWdlSW5pdCh1cmxzKSB7XG4gICAgX2N1cnJlbnRGaWxlcyA9IHVybHM7XG5cbiAgICBfbWVzc2FnZS5oaWRlKCk7XG5cbiAgICBpZiAoIV92aWV3ZXJQYXVzZWQpIHtcbiAgICAgIHBsYXkoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBvblN0b3JhZ2VSZWZyZXNoKHVybHMpIHtcbiAgICBfY3VycmVudEZpbGVzID0gdXJscztcblxuICAgIC8vIGluIGNhc2UgcmVmcmVzaGVkIGZpbGVzIGZpeCBhbiBlcnJvciB3aXRoIHByZXZpb3VzIHNldHVwIG9yIGluaXRpYWwgZmlsZSBwcm9ibGVtLFxuICAgIC8vIGVuc3VyZSBmbGFnIGlzIHJlbW92ZWQgc28gcGxheWJhY2sgaXMgYXR0ZW1wdGVkIGFnYWluXG4gICAgX3BsYXliYWNrRXJyb3IgPSBmYWxzZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIHZhciBmcmFtZU9iaiA9IF9mcmFtZUNvbnRyb2xsZXIuZ2V0RnJhbWVPYmplY3QoX2N1cnJlbnRGcmFtZSk7XG5cbiAgICBfdmlld2VyUGF1c2VkID0gdHJ1ZTtcblxuICAgIGlmIChfbm9GaWxlc0ZsYWcpIHtcbiAgICAgIF9jbGVhck5vRmlsZXNUaW1lcigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChmcmFtZU9iaikge1xuICAgICAgZnJhbWVPYmoucGF1c2UoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIHZhciBmcmFtZU9iaiA9IF9mcmFtZUNvbnRyb2xsZXIuZ2V0RnJhbWVPYmplY3QoX2N1cnJlbnRGcmFtZSk7XG5cbiAgICBfdmlld2VyUGF1c2VkID0gZmFsc2U7XG5cbiAgICBpZiAoX25vRmlsZXNGbGFnKSB7XG4gICAgICBfc3RhcnROb0ZpbGVzVGltZXIoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIV9wbGF5YmFja0Vycm9yKSB7XG4gICAgICBpZiAoZnJhbWVPYmopIHtcbiAgICAgICAgZnJhbWVPYmoucGxheSgpO1xuICAgICAgfSBlbHNlIHtcblxuICAgICAgICAvLyBjaGVjayB0aGUgbGlzdCBpc24ndCBlbXB0eVxuICAgICAgICBpZiAoX2N1cnJlbnRGaWxlcyAmJiBfY3VycmVudEZpbGVzLmxlbmd0aCA+IDApIHtcblxuICAgICAgICAgIC8vIGFkZCBmcmFtZSBhbmQgY3JlYXRlIHRoZSBwbGF5ZXJcbiAgICAgICAgICBfZnJhbWVDb250cm9sbGVyLmFkZCgwKTtcbiAgICAgICAgICBfZnJhbWVDb250cm9sbGVyLmNyZWF0ZUZyYW1lUGxheWVyKDAsIF9hZGRpdGlvbmFsUGFyYW1zLCBfY3VycmVudEZpbGVzLCBjb25maWcuU0tJTiwgXCJwbGF5ZXIuaHRtbFwiKTtcblxuICAgICAgICB9XG5cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgX2RvbmUoKTtcbiAgICB9XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIHNldEFkZGl0aW9uYWxQYXJhbXMobmFtZXMsIHZhbHVlcykge1xuICAgIGlmIChBcnJheS5pc0FycmF5KG5hbWVzKSAmJiBuYW1lcy5sZW5ndGggPiAwICYmIG5hbWVzWzBdID09PSBcImFkZGl0aW9uYWxQYXJhbXNcIikge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWVzKSAmJiB2YWx1ZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBfYWRkaXRpb25hbFBhcmFtcyA9IEpTT04ucGFyc2UodmFsdWVzWzBdKTtcbiAgICAgICAgX3ByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKTtcblxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvQ29udGFpbmVyXCIpLnN0eWxlLmhlaWdodCA9IF9wcmVmcy5nZXRJbnQoXCJyc0hcIikgKyBcInB4XCI7XG5cbiAgICAgICAgX2FkZGl0aW9uYWxQYXJhbXMud2lkdGggPSBfcHJlZnMuZ2V0SW50KFwicnNXXCIpO1xuICAgICAgICBfYWRkaXRpb25hbFBhcmFtcy5oZWlnaHQgPSBfcHJlZnMuZ2V0SW50KFwicnNIXCIpO1xuXG4gICAgICAgIF9tZXNzYWdlID0gbmV3IFJpc2VWaXNpb24uQ29tbW9uLk1lc3NhZ2UoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb0NvbnRhaW5lclwiKSxcbiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lc3NhZ2VDb250YWluZXJcIikpO1xuXG4gICAgICAgIC8vIHNob3cgd2FpdCBtZXNzYWdlIHdoaWxlIFN0b3JhZ2UgaW5pdGlhbGl6ZXNcbiAgICAgICAgX21lc3NhZ2Uuc2hvdyhcIlBsZWFzZSB3YWl0IHdoaWxlIHlvdXIgdmlkZW8gaXMgZG93bmxvYWRlZC5cIik7XG5cbiAgICAgICAgLy8gY3JlYXRlIHRoZSBGcmFtZUNvbnRyb2xsZXIgbW9kdWxlIGluc3RhbmNlXG4gICAgICAgIF9mcmFtZUNvbnRyb2xsZXIgPSBuZXcgUmlzZVZpc2lvbi5Db21tb24uVmlkZW8uRnJhbWVDb250cm9sbGVyKCk7XG5cbiAgICAgICAgLy8gY3JlYXRlIGFuZCBpbml0aWFsaXplIHRoZSBTdG9yYWdlIG1vZHVsZSBpbnN0YW5jZVxuICAgICAgICBfc3RvcmFnZSA9IG5ldyBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLlN0b3JhZ2UoX2FkZGl0aW9uYWxQYXJhbXMpO1xuICAgICAgICBfc3RvcmFnZS5pbml0KCk7XG5cbiAgICAgICAgX3JlYWR5KCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGxheWVyRW5kZWQoKSB7XG4gICAgX2ZyYW1lQ29udHJvbGxlci5yZW1vdmUoX2N1cnJlbnRGcmFtZSwgZnVuY3Rpb24gKCkge1xuICAgICAgX2RvbmUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXllclJlYWR5KCkge1xuICAgIGlmICghX3ZpZXdlclBhdXNlZCkge1xuICAgICAgdmFyIGZyYW1lT2JqID0gX2ZyYW1lQ29udHJvbGxlci5nZXRGcmFtZU9iamVjdChfY3VycmVudEZyYW1lKTtcbiAgICAgIGZyYW1lT2JqLnBsYXkoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5ZXJFcnJvcihlcnJvcikge1xuICAgIGNvbnNvbGUuZGVidWcoXCJ2aWRlby1mb2xkZXI6OnBsYXllckVycm9yKClcIiwgZXJyb3IpO1xuXG4gICAgaWYgKGVycm9yLnR5cGUgPT09IFwic2V0dXBcIiB8fCBlcnJvci5pbmRleCA9PT0gMCkge1xuICAgICAgLy8gRmlsZXMgY2F1c2VkIGFuIGVycm9yIGluIHNldHVwIG9yIGZpcnN0IHZpZGVvIGhhcyBhbiBpc3N1ZSwgZmxhZyB0aGlzXG4gICAgICBfcGxheWJhY2tFcnJvciA9IHRydWU7XG4gICAgfVxuXG4gICAgLy8gZm9yY2Ugd2lkZ2V0IHRvIGFjdCBhcyB0aG91Z2ggdGhlIHBsYXlsaXN0IGlzIGRvbmVcbiAgICBwbGF5ZXJFbmRlZCgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBwYXVzZSgpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBcIm9uU3RvcmFnZUluaXRcIjogb25TdG9yYWdlSW5pdCxcbiAgICBcIm9uU3RvcmFnZVJlZnJlc2hcIjogb25TdG9yYWdlUmVmcmVzaCxcbiAgICBcInBhdXNlXCI6IHBhdXNlLFxuICAgIFwicGxheVwiOiBwbGF5LFxuICAgIFwic2V0QWRkaXRpb25hbFBhcmFtc1wiOiBzZXRBZGRpdGlvbmFsUGFyYW1zLFxuICAgIFwibm9GaWxlc1wiOiBub0ZpbGVzLFxuICAgIFwicGxheWVyRW5kZWRcIjogcGxheWVyRW5kZWQsXG4gICAgXCJwbGF5ZXJSZWFkeVwiOiBwbGF5ZXJSZWFkeSxcbiAgICBcInBsYXllckVycm9yXCI6IHBsYXllckVycm9yLFxuICAgIFwic3RvcFwiOiBzdG9wXG4gIH07XG5cbn0pKGdhZGdldHMpO1xuXG4vKiBnbG9iYWwgY29uZmlnLCBfICovXG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblJpc2VWaXNpb24uVmlkZW9Gb2xkZXIgPSBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlZpZGVvRm9sZGVyLlN0b3JhZ2UgPSBmdW5jdGlvbiAoZGF0YSkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX2luaXRpYWxMb2FkID0gdHJ1ZTtcblxuICB2YXIgX2ZpbGVzID0gW107XG5cbiAgZnVuY3Rpb24gX2dldFVybHMoKSB7XG4gICAgcmV0dXJuIF8ucGx1Y2soX2ZpbGVzLCBcInVybFwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRFeGlzdGluZ0ZpbGUoZmlsZSkge1xuICAgIHJldHVybiBfLmZpbmQoX2ZpbGVzLCBmdW5jdGlvbiAoZikge1xuICAgICAgcmV0dXJuIGZpbGUubmFtZSA9PT0gZi5uYW1lO1xuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gX2RlbGV0ZUZpbGUoZmlsZSkge1xuICAgIHZhciBleGlzdGluZyA9IF9nZXRFeGlzdGluZ0ZpbGUoZmlsZSk7XG5cbiAgICBpZiAoZXhpc3RpbmcpIHtcbiAgICAgIF9maWxlcy5zcGxpY2UoX2ZpbGVzLmluZGV4T2YoZXhpc3RpbmcpLCAxKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfY2hhbmdlRmlsZShmaWxlKSB7XG4gICAgdmFyIGV4aXN0aW5nID0gX2dldEV4aXN0aW5nRmlsZShmaWxlKTtcblxuICAgIGlmIChleGlzdGluZykge1xuICAgICAgZXhpc3RpbmcudXJsID0gZmlsZS51cmw7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2FkZEZpbGUoZmlsZSkge1xuICAgIHZhciBleGlzdGluZyA9IF9nZXRFeGlzdGluZ0ZpbGUoZmlsZSk7XG5cbiAgICBpZiAoIWV4aXN0aW5nKSB7XG4gICAgICAvLyBleHRyYWN0IHRoZSBhY3R1YWwgZmlsZSBuYW1lIGFuZCBzdG9yZSBpbiBuZXcgcHJvcGVydHkgb24gZmlsZSBvYmplY3RcbiAgICAgIGZpbGUuZmlsZU5hbWUgPSBmaWxlLm5hbWUuc2xpY2UoZmlsZS5uYW1lLmxhc3RJbmRleE9mKFwiL1wiKSArIDEsIGZpbGUubmFtZS5sYXN0SW5kZXhPZihcIi5cIikpLnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgIC8vIGluc2VydCBmaWxlIHRvIF9maWxlcyBsaXN0IGF0IHNwZWNpZmljIGluZGV4IGJhc2VkIG9uIGFscGhhYmV0aWNhbCBvcmRlciBvZiBmaWxlIG5hbWVcbiAgICAgIF9maWxlcy5zcGxpY2UoXy5zb3J0ZWRJbmRleChfZmlsZXMsIGZpbGUsIFwiZmlsZU5hbWVcIiksIDAsIGZpbGUpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9oYW5kbGVFbXB0eUZvbGRlcigpIHtcbiAgICBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLm5vRmlsZXMoXCJlbXB0eVwiKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9oYW5kbGVOb0ZvbGRlcigpIHtcbiAgICBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLm5vRmlsZXMoXCJub2V4aXN0XCIpO1xuICB9XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzdG9yYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb0ZvbGRlclN0b3JhZ2VcIik7XG5cbiAgICBpZiAoIXN0b3JhZ2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzdG9yYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJyaXNlLXN0b3JhZ2UtZW1wdHktZm9sZGVyXCIsIF9oYW5kbGVFbXB0eUZvbGRlcik7XG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLW5vLWZvbGRlclwiLCBfaGFuZGxlTm9Gb2xkZXIpO1xuICAgIHN0b3JhZ2UuYWRkRXZlbnRMaXN0ZW5lcihcInJpc2Utc3RvcmFnZS1yZXNwb25zZVwiLCBmdW5jdGlvbihlKSB7XG4gICAgICB2YXIgZmlsZSA9IGUuZGV0YWlsO1xuXG4gICAgICAvLyBBZGRlZFxuICAgICAgaWYoZmlsZS5hZGRlZCkge1xuICAgICAgICBfYWRkRmlsZShmaWxlKTtcblxuICAgICAgICBpZiAoX2luaXRpYWxMb2FkKSB7XG4gICAgICAgICAgX2luaXRpYWxMb2FkID0gZmFsc2U7XG4gICAgICAgICAgUmlzZVZpc2lvbi5WaWRlb0ZvbGRlci5vblN0b3JhZ2VJbml0KF9nZXRVcmxzKCkpO1xuXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIENoYW5nZWRcbiAgICAgIGlmKGZpbGUuY2hhbmdlZCkge1xuICAgICAgICBfY2hhbmdlRmlsZShmaWxlKTtcbiAgICAgIH1cblxuICAgICAgLy8gRGVsZXRlZFxuICAgICAgaWYoZmlsZS5kZWxldGVkKSB7XG4gICAgICAgIF9kZWxldGVGaWxlKGZpbGUpO1xuICAgICAgfVxuXG4gICAgICBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLm9uU3RvcmFnZVJlZnJlc2goX2dldFVybHMoKSk7XG5cbiAgICB9KTtcblxuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiY29tcGFueUlkXCIsIGRhdGEuc3RvcmFnZS5jb21wYW55SWQpO1xuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZm9sZGVyXCIsIGRhdGEuc3RvcmFnZS5mb2xkZXIpO1xuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZW52XCIsIGNvbmZpZy5TVE9SQUdFX0VOVik7XG5cbiAgICBzdG9yYWdlLmdvKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwiaW5pdFwiOiBpbml0XG4gIH07XG59O1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5WaWRlbyA9IFJpc2VWaXNpb24uQ29tbW9uLlZpZGVvIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5WaWRlby5GcmFtZUNvbnRyb2xsZXIgPSBmdW5jdGlvbiAoKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBQUkVGSVggPSBcImlmX1wiO1xuXG4gIGZ1bmN0aW9uIGdldEZyYW1lQ29udGFpbmVyKGluZGV4KSB7XG4gICAgcmV0dXJuIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFBSRUZJWCArIGluZGV4KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldEZyYW1lT2JqZWN0KGluZGV4KSB7XG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpLFxuICAgICAgaWZyYW1lO1xuXG4gICAgaWZyYW1lID0gZnJhbWVDb250YWluZXIucXVlcnlTZWxlY3RvcihcImlmcmFtZVwiKTtcblxuICAgIGlmIChpZnJhbWUpIHtcbiAgICAgIHJldHVybiAoaWZyYW1lLmNvbnRlbnRXaW5kb3cpID8gaWZyYW1lLmNvbnRlbnRXaW5kb3cgOlxuICAgICAgICAoaWZyYW1lLmNvbnRlbnREb2N1bWVudC5kb2N1bWVudCkgPyBpZnJhbWUuY29udGVudERvY3VtZW50LmRvY3VtZW50IDogaWZyYW1lLmNvbnRlbnREb2N1bWVudDtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9jbGVhcihpbmRleCkge1xuICAgIHZhciBmcmFtZUNvbnRhaW5lciA9IGdldEZyYW1lQ29udGFpbmVyKGluZGV4KSxcbiAgICAgIGZyYW1lT2JqID0gZ2V0RnJhbWVPYmplY3QoaW5kZXgpLFxuICAgICAgaWZyYW1lO1xuXG4gICAgaWYgKGZyYW1lT2JqKSB7XG4gICAgICBpZnJhbWUgPSBmcmFtZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiaWZyYW1lXCIpO1xuICAgICAgZnJhbWVPYmoucmVtb3ZlKCk7XG4gICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwic3JjXCIsIFwiYWJvdXQ6YmxhbmtcIik7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gYWRkKGluZGV4KSB7XG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpLFxuICAgICAgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtcblxuICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJhbGxvd1RyYW5zcGFyZW5jeVwiLCB0cnVlKTtcbiAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwiZnJhbWVib3JkZXJcIiwgXCIwXCIpO1xuICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJzY3JvbGxpbmdcIiwgXCJub1wiKTtcblxuICAgIGZyYW1lQ29udGFpbmVyLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIH1cblxuICBmdW5jdGlvbiBjcmVhdGVGcmFtZVBsYXllcihpbmRleCwgcGFyYW1zLCBmaWxlcywgc2tpbiwgc3JjKSB7XG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpLFxuICAgICAgZnJhbWVPYmogPSBnZXRGcmFtZU9iamVjdChpbmRleCksXG4gICAgICBpZnJhbWU7XG5cbiAgICBpZiAoZnJhbWVPYmopIHtcbiAgICAgIGlmcmFtZSA9IGZyYW1lQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCJpZnJhbWVcIik7XG5cbiAgICAgIGlmcmFtZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmcmFtZS5vbmxvYWQgPSBudWxsO1xuXG4gICAgICAgIC8vIGluaXRpYWxpemUgYW5kIGxvYWQgdGhlIHBsYXllciBpbnNpZGUgdGhlIGlmcmFtZVxuICAgICAgICBmcmFtZU9iai5pbml0KHBhcmFtcywgZmlsZXMsIHNraW4pO1xuICAgICAgICBmcmFtZU9iai5sb2FkKCk7XG4gICAgICB9O1xuXG4gICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwic3JjXCIsIHNyYyk7XG4gICAgfVxuXG4gIH1cblxuICBmdW5jdGlvbiBoaWRlKGluZGV4KSB7XG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpO1xuXG4gICAgZnJhbWVDb250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwiaGlkZGVuXCI7XG4gIH1cblxuICBmdW5jdGlvbiByZW1vdmUoaW5kZXgsIGNhbGxiYWNrKSB7XG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoUFJFRklYICsgaW5kZXgpO1xuXG4gICAgX2NsZWFyKGluZGV4KTtcblxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gcmVtb3ZlIHRoZSBpZnJhbWUgYnkgY2xlYXJpbmcgYWxsIGVsZW1lbnRzIGluc2lkZSBkaXYgY29udGFpbmVyXG4gICAgICB3aGlsZSAoZnJhbWVDb250YWluZXIuZmlyc3RDaGlsZCkge1xuICAgICAgICBmcmFtZUNvbnRhaW5lci5yZW1vdmVDaGlsZChmcmFtZUNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGNhbGxiYWNrICYmIHR5cGVvZiBjYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfSwgMjAwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHNob3coaW5kZXgpIHtcbiAgICB2YXIgZnJhbWVDb250YWluZXIgPSBnZXRGcmFtZUNvbnRhaW5lcihpbmRleCk7XG5cbiAgICBmcmFtZUNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGFkZDogYWRkLFxuICAgIGNyZWF0ZUZyYW1lUGxheWVyOiBjcmVhdGVGcmFtZVBsYXllcixcbiAgICBnZXRGcmFtZUNvbnRhaW5lcjogZ2V0RnJhbWVDb250YWluZXIsXG4gICAgZ2V0RnJhbWVPYmplY3Q6IGdldEZyYW1lT2JqZWN0LFxuICAgIGhpZGU6IGhpZGUsXG4gICAgcmVtb3ZlOiByZW1vdmUsXG4gICAgc2hvdzogc2hvd1xuICB9O1xufTtcblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uTWVzc2FnZSA9IGZ1bmN0aW9uIChtYWluQ29udGFpbmVyLCBtZXNzYWdlQ29udGFpbmVyKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfYWN0aXZlID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gX2luaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuc3R5bGUuaGVpZ2h0ID0gbWFpbkNvbnRhaW5lci5zdHlsZS5oZWlnaHQ7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS53YXJuKFwiQ2FuJ3QgaW5pdGlhbGl6ZSBNZXNzYWdlIC0gXCIsIGUubWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBoaWRlKCkge1xuICAgIGlmIChfYWN0aXZlKSB7XG4gICAgICAvLyBjbGVhciBjb250ZW50IG9mIG1lc3NhZ2UgY29udGFpbmVyXG4gICAgICB3aGlsZSAobWVzc2FnZUNvbnRhaW5lci5maXJzdENoaWxkKSB7XG4gICAgICAgIG1lc3NhZ2VDb250YWluZXIucmVtb3ZlQ2hpbGQobWVzc2FnZUNvbnRhaW5lci5maXJzdENoaWxkKTtcbiAgICAgIH1cblxuICAgICAgLy8gaGlkZSBtZXNzYWdlIGNvbnRhaW5lclxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG5cbiAgICAgIC8vIHNob3cgbWFpbiBjb250YWluZXJcbiAgICAgIG1haW5Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xuXG4gICAgICBfYWN0aXZlID0gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2hvdyhtZXNzYWdlKSB7XG4gICAgdmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuICAgICAgcDtcblxuICAgIGlmICghX2FjdGl2ZSkge1xuICAgICAgLy8gaGlkZSBtYWluIGNvbnRhaW5lclxuICAgICAgbWFpbkNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcblxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuXG4gICAgICAvLyBjcmVhdGUgbWVzc2FnZSBlbGVtZW50XG4gICAgICBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XG4gICAgICBwLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibWVzc2FnZVwiKTtcbiAgICAgIHAuc3R5bGUubGluZUhlaWdodCA9IG1lc3NhZ2VDb250YWluZXIuc3R5bGUuaGVpZ2h0O1xuXG4gICAgICBmcmFnbWVudC5hcHBlbmRDaGlsZChwKTtcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuYXBwZW5kQ2hpbGQoZnJhZ21lbnQpO1xuXG4gICAgICBfYWN0aXZlID0gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gbWVzc2FnZSBhbHJlYWR5IGJlaW5nIHNob3duLCB1cGRhdGUgbWVzc2FnZSB0ZXh0XG4gICAgICBwID0gbWVzc2FnZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiLm1lc3NhZ2VcIik7XG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XG4gICAgfVxuICB9XG5cbiAgX2luaXQoKTtcblxuICByZXR1cm4ge1xuICAgIFwiaGlkZVwiOiBoaWRlLFxuICAgIFwic2hvd1wiOiBzaG93XG4gIH07XG59O1xuXG4vKiBnbG9iYWwgZ2FkZ2V0cywgUmlzZVZpc2lvbiAqL1xuXG4oZnVuY3Rpb24gKHdpbmRvdywgZ2FkZ2V0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpLFxuICAgIGlkID0gcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIik7XG5cbiAgLy8gRGlzYWJsZSBjb250ZXh0IG1lbnUgKHJpZ2h0IGNsaWNrIG1lbnUpXG4gIHdpbmRvdy5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfTtcblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIFJpc2VWaXNpb24uVmlkZW9Gb2xkZXIucGxheSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgUmlzZVZpc2lvbi5WaWRlb0ZvbGRlci5wYXVzZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLnN0b3AoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBvbHltZXJSZWFkeSgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIldlYkNvbXBvbmVudHNSZWFkeVwiLCBwb2x5bWVyUmVhZHkpO1xuXG4gICAgaWYgKGlkICYmIGlkICE9PSBcIlwiKSB7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzY21kX3BsYXlfXCIgKyBpZCwgcGxheSk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzY21kX3BhdXNlX1wiICsgaWQsIHBhdXNlKTtcbiAgICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNjbWRfc3RvcF9cIiArIGlkLCBzdG9wKTtcblxuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc3BhcmFtX3NldF9cIiArIGlkLCBSaXNlVmlzaW9uLlZpZGVvRm9sZGVyLnNldEFkZGl0aW9uYWxQYXJhbXMpO1xuICAgICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzcGFyYW1fZ2V0XCIsIG51bGwsIGlkLCBbXCJhZGRpdGlvbmFsUGFyYW1zXCJdKTtcbiAgICB9XG4gIH1cblxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIldlYkNvbXBvbmVudHNSZWFkeVwiLCBwb2x5bWVyUmVhZHkpO1xuXG59KSh3aW5kb3csIGdhZGdldHMpO1xuXG5cblxuLyoganNoaW50IGlnbm9yZTpzdGFydCAqL1xudmFyIF9nYXEgPSBfZ2FxIHx8IFtdO1xuXG5fZ2FxLnB1c2goWydfc2V0QWNjb3VudCcsICdVQS01NzA5MjE1OS00J10pO1xuX2dhcS5wdXNoKFsnX3RyYWNrUGFnZXZpZXcnXSk7XG5cbihmdW5jdGlvbigpIHtcbiAgdmFyIGdhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7IGdhLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsgZ2EuYXN5bmMgPSB0cnVlO1xuICBnYS5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly9zc2wnIDogJ2h0dHA6Ly93d3cnKSArICcuZ29vZ2xlLWFuYWx5dGljcy5jb20vZ2EuanMnO1xuICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnYSwgcyk7XG59KSgpO1xuLyoganNoaW50IGlnbm9yZTplbmQgKi9cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
