function doneEvent(){parent.RiseVision.VideoFolder.playerEnded()}function readyEvent(){parent.RiseVision.VideoFolder.playerReady()}function errorEvent(e){parent.RiseVision.VideoFolder.playerError(e)}function loadVideo(e,t,n,o,i,r,a){width=e,height=t,volume=n,autoPlay=o,scaleToFit=i,pauseDuration=r,files=a.split(","),player&&player.loadVideo()}function play(){player.play()}function pause(){player.pause()}function stop(){player.stop()}function remove(){player.remove()}function PlayerJW(){function e(e){var t,n=[".mp4",".webm",".ogg",".ogv"],o=e.toLowerCase(),i=null;for(t=0;t<=n.length;t+=1)if(-1!==o.indexOf(n[t])){i=n[t].substr(n[t].lastIndexOf(".")+1);break}return"ogv"===i&&(i="ogg"),i}function t(){for(var t=[],n=0;n<files.length;n+=1)t.push({sources:[{file:files[n],type:e(files[n])}]});return t}function n(){doneEvent()}function o(){isLoading?(isLoading=!1,jwplayer().pause(),jwplayer().setMute(!1),jwplayer().setVolume(volume),readyEvent()):(pauseHandlerOn||(pauseHandlerOn=!0,jwplayer().onPause(function(){i()})),clearTimeout(pauseTimer))}function i(){viewerPaused||isLoading||(clearTimeout(pauseTimer),pauseTimer=setTimeout(function(){jwplayer().play(),jwplayer().setControls(!1),jwplayer().setControls(!0)},1e3*pauseDuration))}function r(e){e&&errorEvent({type:"video",index:jwplayer().getPlaylistIndex(),message:e.message})}function a(e){e&&errorEvent({type:"setup",index:0,message:e.message})}this.loadVideo=function(){jwplayer("player").setup({playlist:t(),width:width,height:height,controls:!autoPlay,stretching:scaleToFit?"uniform":"none"}),jwplayer().onSetupError(function(e){a(e)}),jwplayer().onReady(function(){var e,t=document.getElementById("player").getElementsByTagName("*"),i=t.length;for(e=0;i>e;e+=1)t[e].className+=" notransition";document.getElementById("player").className+=" notransition",jwplayer().onPlaylistComplete(function(){n()}),jwplayer().onPlay(function(){o()}),jwplayer().onError(function(e){r(e)}),setTimeout(function(){jwplayer().play()},200)})},this.play=function(){viewerPaused=!1,autoPlay&&jwplayer().play()},this.pause=function(){viewerPaused=!0,clearTimeout(pauseTimer),jwplayer().pause()},this.stop=function(){this.pause()},this.remove=function(){viewerPaused=!1,clearTimeout(pauseTimer),pauseTimer=null,jwplayer().remove()}}if("undefined"==typeof config){var config={};"undefined"!=typeof angular&&(angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","components/rv-common-i18n/dist/locales/translation_").constant("LOCALES_SUFIX",".json"),angular.module("risevision.widget.common.storage-selector.config").value("STORAGE_MODAL","http://storage-stage-rva-test.risevision.com/modal.html"))}var RiseVision=RiseVision||{};RiseVision.VideoFolder={},RiseVision.VideoFolder=function(e){"use strict";function t(){e.rpc.call("","rsevent_done",null,V.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,V.getString("id"),!0,!0,!0,!0,!0)}function o(){var e=document.querySelector("#videoContainer iframe");return e?e.contentWindow?e.contentWindow:e.contentDocument.document?e.contentDocument.document:e.contentDocument:null}function i(){for(var e=document.getElementById("videoContainer");e.firstChild;)e.removeChild(e.firstChild)}function r(){var e=o();e&&(e.remove(),e.location.reload())}function a(){var e,t=document.getElementById("videoContainer");e=document.createElement("iframe"),e.setAttribute("allowTransparency",!0),e.setAttribute("frameborder","0"),e.setAttribute("scrolling","no"),t.appendChild(e)}function s(){R=new RiseVision.VideoFolder.Storage(h),R.init()}function l(){var e=RiseVision.VideoFolder.Template.getHTML(h,w),t=o();t&&(t.document.open(),t.document.write(e),t.document.close())}function c(e){w=e,a(),l()}function u(){}function d(){var e=o();e&&e.pause()}function p(){var e=o();e?e.play():(a(),l())}function m(t,n){Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(n)&&n.length>0&&(h=JSON.parse(n[0]),V=new e.Prefs,document.getElementById("videoContainer").style.height=V.getInt("rsH")+"px",h.width=V.getInt("rsW"),h.height=V.getInt("rsH"),b=new RiseVision.Common.Background(h),b.init(s))}function g(){r(),setTimeout(function(){i(),t()},200)}function f(){k?p():(k=!0,n())}function y(e){console.debug("video-folder::playerError()",e),k?g():(r(),i())}function v(){d()}var h,w,V=null,b=null,R=null,k=!1;return{onStorageInit:c,onStorageRefresh:u,pause:d,play:p,setAdditionalParams:m,playerEnded:g,playerReady:f,playerError:y,stop:v}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Background=function(e){"use strict";function t(){setTimeout(function(){s.style.backgroundImage="url("+e.background.image.url+d+"cb="+(new Date).getTime()+")",t()},c)}function n(){a=!0,e.background.useImage&&!u&&t(),r&&"function"==typeof r&&r()}function o(){var t;s=document.getElementById("background"),l=document.getElementById("backgroundStorage"),document.body.style.background=e.background.color,s?e.background.useImage?(s.className=e.background.image.position,s.className=e.background.image.scale?s.className+" scale-to-fit":s.className,u=0!==Object.keys(e.backgroundStorage).length,u?l?(l.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.files&&e.detail.files.length>0&&(s.style.backgroundImage="url("+e.detail.files[0].url+")"),a||n()}),l.setAttribute("folder",e.backgroundStorage.folder),l.setAttribute("fileName",e.backgroundStorage.fileName),l.setAttribute("companyId",e.backgroundStorage.companyId),l.go()):console.log("Missing element with id value of 'backgroundStorage'"):(t=e.background.image.url.split("?"),d=1===t.length?"?":"&",s.style.backgroundImage="url("+e.background.image.url+")",n())):n():console.log("Missing element with id value of 'background'")}function i(e){a?e&&"function"==typeof e&&e():(e&&(r=e),o())}var r=null,a=!1,s=null,l=null,c=9e5,u=!1,d="";return{init:i}};var RiseVision=RiseVision||{};RiseVision.VideoFolder=RiseVision.VideoFolder||{},RiseVision.VideoFolder.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoFolderStorage"),o="",i="";if(t){switch(t.addEventListener("rise-storage-response",function(e){var t=[];e.detail&&e.detail.files&&e.detail.files.length>0&&(e.detail.files.forEach(function(e){t.push(e.url)}),n?(n=!1,RiseVision.VideoFolder.onStorageInit(t)):RiseVision.VideoFolder.onStorageRefresh(t))}),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("folder",e.storage.folder),e.order){case"alpha-asc":o="name",i="asc";break;case"alpha-desc":o="name",i="desc";break;case"date-asc":o="date",i="asc";break;case"date-desc":o="date",i="desc";break;case"random":o="random";break;default:o="name",i="asc"}t.setAttribute("sort",o),t.setAttribute("sortDirection",i),t.go()}}var n=!0;return{init:t}};var files,volume,autoPlay,scaleToFit,pauseDuration,width,height,isLoading=!0,pauseHandlerOn=!1,viewerPaused=!1,pauseTimer=null,player=null,RiseVision=RiseVision||{};RiseVision.VideoFolder=RiseVision.VideoFolder||{},RiseVision.VideoFolder.Template=function(){"use strict";function e(e,n){var o=t;return o=o.replace("%s1",e.width+"px"),o=o.replace("%s2",e.height+"px"),o=o.replace("%s3",e.video.volume),o=o.replace("%s4",e.video.autoplay),o=o.replace("%s5",e.video.scaleToFit),o=o.replace("%s6",e.pause),o=o.replace("%s7",n.join())}var t='<html><head><meta http-equiv="content-type" content="text/html; charset=UTF-8"><title></title><script type="text/javascript" src="//s3.amazonaws.com/rise-common/scripts/jw-player/jwplayer.js"></script><script>jwplayer.key="xBXyUtAJ+brFzwc2kNhDg/Sqk8W7rmktAYliYHzVgxo="</script><script type="text/javascript" src="js/player.min.js"></script><style>	body { 		background-color: transparent; 		-moz-user-select: none; 		-webkit-user-select: none; 		-khtml-user-select: none; 		user-select: none; 	} .notransition {    -webkit-transition: none !important;    transition: none !important;  }</style></head><body style="margin:0px;"><div id="player">Loading the player...</div><script language="javascript">	window.oncontextmenu = function() {		return false;	};	try {		player = new PlayerJW();		loadVideo("%s1", "%s2", %s3, %s4, %s5, %s6, "%s7");	} catch (e) {		console.log(e.message);		parent.RiseVision.VideoFolder.playerError();	}</script></body></html>';return{getHTML:e}}(),function(e,t){"use strict";function n(){RiseVision.VideoFolder.play()}function o(){RiseVision.VideoFolder.pause()}function i(){RiseVision.VideoFolder.stop()}function r(){e.removeEventListener("polymer-ready",r),s&&""!==s&&(t.rpc.register("rscmd_play_"+s,n),t.rpc.register("rscmd_pause_"+s,o),t.rpc.register("rscmd_stop_"+s,i),t.rpc.register("rsparam_set_"+s,RiseVision.VideoFolder.setAdditionalParams),t.rpc.call("","rsparam_get",null,s,["additionalParams"]))}var a=new t.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("polymer-ready",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-4"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,